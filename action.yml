name: 'Push Docker Image to GAR by github action'
description: 'Builds and pushes a Docker image to Google Artifact Registry'
inputs:
  gcloud_service_key:
    description: 'The GCP service account key in base64 encoded JSON'
    required: true
  project_id:
    description: 'The GCP project ID'
    required: true
  registry:
    description: 'The GAR registry location'
    required: true
  repository:
    description: 'The GAR repository name'
    required: true
  image_name:
    description: 'The name of the Docker image'
    required: true
  image_tags:
    description: 'Comma-separated list of tags for the Docker image'
    required: true
  dockerfile:
    description: 'Path to the Dockerfile'
    required: true
  build_args:
    description: 'Build arguments for Docker'
    required: false
  build_args_by_newline:
    description: 'Build arguments for Docker, separated by newlines'
    required: false
  stage:
    description: 'The stage of the deployment'
    required: false
    default: 'dev'
  target:
    description: 'The target stage to stop the build at'
    required: false
    default: ''
  free_docker_build_parameter:
    description: 'Custom Docker build parameters'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2.1.8
      with:
        credentials_json: ${{ inputs.gcloud_service_key }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2.1.4

    - name: Configure Docker Client for Gcloud
      run: gcloud auth configure-docker ${{ inputs.registry }} --quiet
      shell: bash

    - name: Build Docker Image
      run: |
        DOCKER_BUILD_ARGS=""
        if [ -n "${{ inputs.build_args }}" ]; then
          IFS=',' read -ra ARGS <<< "${{ inputs.build_args }}"
          for arg in "${ARGS[@]}"; do
            DOCKER_BUILD_ARGS="$DOCKER_BUILD_ARGS --build-arg \"$arg\""
          done
        fi

        if [ -n "${{ inputs.build_args_by_newline }}" ]; then
          while IFS= read -r arg; do
            if [ -n "$arg" ]; then
              DOCKER_BUILD_ARGS="$DOCKER_BUILD_ARGS --build-arg \"$arg\""
            fi
          done <<< "${{ inputs.build_args_by_newline }}"
        fi

        TARGET_ARG=""
        if [ -n "${{ inputs.target }}" ]; then
          TARGET_ARG="--target ${{ inputs.target }}"
        fi

        docker build . -f ${{ inputs.dockerfile }} -t ${{ inputs.registry }}/${{ inputs.project_id }}/${{ inputs.repository }}/${{ inputs.image_name }}:${{ inputs.stage }} $DOCKER_BUILD_ARGS $TARGET_ARG ${{ inputs.free_docker_build_parameter }}
      shell: bash

    - name: Push Docker Image
      run: |
        IFS=',' read -ra TAGS <<< "${{ inputs.image_tags }}"
        for tag in "${TAGS[@]}"; do
          docker tag ${{ inputs.registry }}/${{ inputs.project_id }}/${{ inputs.repository }}/${{ inputs.image_name }}:${{ inputs.stage }} ${{ inputs.registry }}/${{ inputs.project_id }}/${{ inputs.repository }}/${{ inputs.image_name }}:$tag
          docker push ${{ inputs.registry }}/${{ inputs.project_id }}/${{ inputs.repository }}/${{ inputs.image_name }}:$tag
        done
      shell: bash
